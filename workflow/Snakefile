include: "rules/globals.smk"  # no rules only globals, asserts, and utils
include: "rules/download.smk"


rule all:
    input:
        f"{RESULTS}/neighbors.tsv",
        archs=f"{RESULTS}/archs.tsv",
        absence_presence=f"{RESULTS}/absence_presence.tsv",


rule hmmer_input:
    input:
        ALL_FAAS,
    output:
        f"{RESULTS}/.input_faas.txt",
    run:
        with open(f"{output}", "w") as fh:
            for faa in ALL_FAAS:
                fh.write(f"{faa}\n")


rule hmmer:
    input:
        faas=rules.hmmer_input.output,
    output:
        tsv=f"{RESULTS}/hmmer.tsv",
    params:
        queries=f"{IN_QUERIES}",
    shell:
        r"""
        workflow/scripts/hmmer.py {params} {input} {output}
        """


rule get_neighbors:
    input:
        hmmer=rules.hmmer.output,
    output:
        neighbors=f"{RESULTS}/neighbors.tsv",
    threads: workflow.cores
    params:
        N=8,
        gdir=f"{RESULTS}/genomes",
    log:
        "logs/neighbors.log",
    shell:
        """
        workflow/scripts/neighbors.R {log} {threads} {params} {input} >| {output}
        """


rule all_faas:
    input:
        neighbors=rules.get_neighbors.output,
    output:
        sentinel=f"{RESULTS}/all.faa",
    params:
        db=f"{RESULTS_GENOMES}",
    threads: workflow.cores
    shell:
        r"""
        workflow/scripts/harvest.R {params} {threads} {input} >| {output}
        """


rule interproscan_xml:
    input:
        faa=rules.all_faas.output,
    output:
        xml=f"{RESULTS}/.iscan.xml",
    params:
        tmp="/tmp",
    threads: workflow.cores
    cache: True
    shell:
        """
        interproscan.sh --formats XML\
                        --input {input} \
                        --outfile {output} \
                        --cpu {threads} \
                        --tempdir {params} \
                        --goterms
        """


rule interproscan_tsv:
    input:
        xml=rules.interproscan_xml.output,
    output:
        tsv=f"{RESULTS}/iscan.tsv",
    cache: True
    params:
        header=ISCAN_HEADER,
        tmp="/tmp",
    shell:
        """
        interproscan.sh --mode convert \
                        --formats TSV \
                        --input {input.xml} \
                        --outfile {output.tsv}.temp \
                        --goterms \
                        --enable-tsv-residue-annot

        # Annotate headers
        cat - {output.tsv}.temp >| {output.tsv} <<< '{params.header}'

        rm {output.tsv}.temp
        """


rule get_archs:
    input:
        rules.interproscan_tsv.output,
    output:
        archs=f"{RESULTS}/archs.tsv",
        pidrow=f"{RESULTS}/archs_pidrow.tsv",
        code=f"{RESULTS}/archs_code.tsv",
    shell:
        """
        workflow/scripts/archs.R {input} {output}
        """


rule get_absence_presence:
    input:
        taxa=rules.join_genomes_taxallnomy.output,
        proteins=rules.hmmer.output,
        domains=rules.get_archs.output.archs,
    output:
        TGPD=f"{RESULTS}/TGPD.tsv",
        absence_presence=f"{RESULTS}/absence_presence.tsv",
    shell:
        """
        workflow/scripts/absence_presence.R {input} {output}
        """
