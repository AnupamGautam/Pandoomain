include: "rules/globals.smk"  # no rules only globals, asserts, and utils
include: "rules/download.smk"


rule all:
    input:
        f"{RESULTS}/hmmer.tsv",
        f"{RESULTS}/genomes_metadata.tsv",
        f"{RESULTS}/.domains_faas.sentinel",
        f"{RESULTS}/all.faa",
        f"{RESULTS}/iscan.tsv",


rule hmmer_input:
    input:
        ALL_FAAS,
    output:
        f"{RESULTS}/.input_faas.txt",
    run:
        with open(f"{output}", "w") as fh:
            for faa in ALL_FAAS:
                fh.write(f"{faa}\n")


rule hmmer:
    input:
        faas=rules.hmmer_input.output,
    output:
        tsv=f"{RESULTS}/hmmer.tsv",
    params:
        queries=f"{IN_QUERIES}",
    shell:
        r"""
        workflow/scripts/hmmer.py {params} {input} {output}
        """


rule domains_faas:
    input:
        hmmer=rules.hmmer.output,
    output:
        sentinel=f"{RESULTS}/.domains_faas.sentinel",
    params:
        db=f"{RESULTS_GENOMES}",
        out_dir=f"{RESULTS}/domains_faas",
    shell:
        r"""
        workflow/scripts/harvest.R {params.db} {input} {params.out_dir}
        printf "`date`\\n" >| {output}
        """


rule bind_faas:
    input:
        rules.domains_faas.output,
    output:
        f"{RESULTS}/all.faa",
    params:
        rules.domains_faas.params.out_dir,
    shell:
        r"""
        cat  {params}/*.faa >| {output}
        """


rule interproscan_xml:
    input:
        faa=rules.bind_faas.output,
    output:
        xml=f"{RESULTS}/.iscan.xml",
    params:
        tmp="/tmp",
    threads: workflow.cores
    cache: "omit-software"
    shell:
        """
        interproscan.sh --formats XML\
                        --input {input} \
                        --outfile {output} \
                        --cpu {threads} \
                        --tempdir {params} \
                        --goterms
        """


rule interproscan_tsv:
    input:
        xml=rules.interproscan_xml.output,
    output:
        tsv=f"{RESULTS}/iscan.tsv",
    params:
        header=ISCAN_HEADER,
        tmp="/tmp",
    shell:
        """
        interproscan.sh --mode convert \
                        --formats TSV \
                        --input {input.xml} \
                        --outfile {output.tsv}.temp \
                        --goterms \
                        --enable-tsv-residue-annot

        # Annotate headers
        cat - {output.tsv}.temp >| {output.tsv} <<< '{params.header}'

        rm {output.tsv}.temp
        """
