configfile: "config/config.yaml"


INPUT_GENOMES = "input_genomes.txt"
INPUT_GENES = "input_genes.faa"


with open(INPUT_GENOMES, "r") as f:
    GENOMES = list()
    for line in f:
        GENOMES.append(line.strip())


RESULTS = "results"
RESULTS_GENOMES = f"{RESULTS}/genomes"


rule all:
    input:
        [f"{RESULTS_GENOMES}/{genome}/{genome}.faa" for genome in GENOMES],
        [f"{RESULTS_GENOMES}/{genome}/{genome}.gff" for genome in GENOMES],
        # not sold on the snakemake.io.expand


rule download_genome:
    output:
        faa=f"{RESULTS_GENOMES}/{{genome}}/{{genome}}.faa",
        gff=f"{RESULTS_GENOMES}/{{genome}}/{{genome}}.gff",
    conda:
        "envs/ncbi_datasets.yaml"
    shell:
        """
        mkdir -p {RESULTS_GENOMES}/{wildcards.genome}
        workflow/scripts/download_genome.py --include protein gff3 --out-dir {RESULTS_GENOMES}/{wildcards.genome} -- {wildcards.genome}
        """


rule blastp:
    input:
        faa=rules.download_genome.output.faa,
        queries=f"{INPUT_GENES}",
    output:
        tsv=f"{RESULTS_GENOMES}/{{genome}}/{{genome}}/blastp.tsv",
    params:
        db=f"{RESULTS_GENOMES}/{{genome}}/{{genome}}/diamond_DB",
    shell:
        """
        diamond makedb --in {input.faa} -d {params.db}
        diamond blastp -d {params.db} -o {output.tsv}
        """

